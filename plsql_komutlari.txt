-- 1 -- 6 NUMARALI FILMIN ADINI MEMENTO 2 OLARAK VE YILINI 2005 OLARAK DEĞISTIR
BEGIN
UPDATE FILM SET ADI = 'MEMENTO 2' WHERE ID = 6;
UPDATE FILM SET YAPIM_YILI = 2005 WHERE ID = 6;
DBMS_OUTPUT.PUT_LINE('FILM DUZENLENDI.');
END;


-- 2-- YENI FILM EKLE
DECLARE
EKLEMEHATASI EXCEPTION;
PRAGMA EXCEPTION_INIT(EKLEMEHATASI,-6550);
BEGIN
INSERT INTO FILM VALUES (15,'YENI FILM',2018,120,'TURKCE',2);
EXCEPTION
WHEN EKLEMEHATASI THEN
DBMS_OUTPUT.PUT_LINE('DEĞER YETERSIZ ISLEM IPTAL EDILDI.');
END;

-- 3 -- EKLENEN FILMI SIL - HATA AL
DECLARE
SILMEHATASI EXCEPTION;
PRAGMA EXCEPTION_INIT(SILMEHATASI,-2292);
BEGIN
DELETE FROM FILM WHERE ID = 11;
EXCEPTION
WHEN SILMEHATASI THEN
DBMS_OUTPUT.PUT_LINE('2292 IŞLEM IPTAL');
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('OTHERS IŞLEM IPTAL');
END;

-- 4 -- BUTUN ELEŞTIRMENLERIN VERDIĞI PUANLAR GOZ ONUNE ALINDIĞINDA EN YUKSEK PUANLI FILMER HANGILERIDIR.
DECLARE
CURSOR FILMLER IS SELECT F.ADI , AVG(FE.PUAN) PUAN FROM FILM F, FILMELESTIRILERI FE, ELESTIRMEN E
WHERE F.ID = FE.FILMID AND FE.ELESTIRMENID = E.ID
GROUP BY F.ADI ORDER BY PUAN DESC;
TYPE ADTUR IS TABLE OF FILM.ADI%TYPE INDEX BY BINARY_INTEGER;
TYPE PUANTUR IS TABLE OF NUMBER(4,2) INDEX BY BINARY_INTEGER; -- FILMELESTIRILERI.PUAN%TYPE
AD ADTUR;
PUAN PUANTUR;
SAYAC BINARY_INTEGER := 1;
BEGIN
FOR SAY IN FILMLER LOOP
AD(SAYAC) := SAY.ADI;
PUAN(SAYAC) := SAY.PUAN;
DBMS_OUTPUT.PUT_LINE(RPAD(AD(SAYAC),30) || PUAN(SAYAC));
SAYAC := SAYAC + 1;
END LOOP;
END;

--5 -- FILMLERIN ALINMA TARIHLERI - DOĞGANCAN OKUR 17/10/19 TARIHINDEN ONCE ALDIĞI KITAPLAR NELERDIR.
DECLARE
CURSOR UYESORGU IS SELECT U.ADI ADI , U. SOYADI SOYADI, F.ADI FILMADI, O.ALINMATARIHI TARIH
FROM UYE U, ODUNCFILMLER O , FILM F
WHERE U.ID = O.UYEID AND O.FILMID = F.ID AND U.ID = &UYE_ID_GIRIN
AND O.ALINMATARIHI < TO_DATE('17/10/19' , 'DD/MM/YY');
TYPE ADTUR IS TABLE OF UYE.ADI%TYPE INDEX BY BINARY_INTEGER;
TYPE SOYADTUR IS TABLE OF UYE.SOYADI%TYPE INDEX BY BINARY_INTEGER;
TYPE FILMADITUR IS TABLE OF FILM.ADI%TYPE INDEX BY BINARY_INTEGER;
TYPE TARIHTUR IS TABLE OF ODUNCFILMLER.ALINMATARIHI%TYPE INDEX BY BINARY_INTEGER;
AD ADTUR;
SOYAD SOYADTUR;
FILMADI FILMADITUR;
TARIH TARIHTUR;
SAYAC BINARY_INTEGER := 1;
BEGIN
FOR TANE IN UYESORGU LOOP
AD(SAYAC) := TANE.ADI;
SOYAD(SAYAC) := TANE.SOYADI;
FILMADI(SAYAC) := TANE.FILMADI;
TARIH(SAYAC) := TANE.TARIH;
DBMS_OUTPUT.PUT_LINE(RPAD(AD(SAYAC),15) || RPAD(SOYAD(SAYAC),15) || RPAD(FILMADI(SAYAC),15) || RPAD(TARIH(SAYAC),15));
SAYAC := SAYAC + 1;
END LOOP;
END;


-- 6 --BAŞROL OYNAYAN AKTORLERIN OYNAMA SAYILARINA GORE SIRALAYIN
DECLARE
    TYPE REC IS RECORD (ADI AKTOR.ADI%TYPE, SOYADI AKTOR.SOYADI%TYPE , SAYI BINARY_INTEGER);
    CURSOR SORGU IS SELECT A.ADI , A.SOYADI , COUNT(FA.ROL) SAYI FROM AKTOR A, ULKE U,FILMAKTORLERI FA , FILM F
        WHERE U.ID = A.ULKE AND FA.AKTORID = A.ID AND FA.FILMID = F.ID AND FA.ROL = UPPER('BASROL')
        GROUP BY A.ADI, A.SOYADI
        ORDER BY SAYI DESC;
    TYPE RECTUR IS TABLE OF REC INDEX BY BINARY_INTEGER;
    STR RECTUR;
    SAY BINARY_INTEGER := 1;
BEGIN
    FOR TANE IN SORGU LOOP
        STR(SAY).ADI := TANE.ADI;
        STR(SAY).SOYADI := TANE.SOYADI;
        STR(SAY).SAYI := TANE.SAYI;
        DBMS_OUTPUT.PUT_LINE(RPAD(STR(SAY).ADI,20) || RPAD(STR(SAY).SOYADI,20) || RPAD(STR(SAY).SAYI,10));
		SAY := SAY + 1;
    END LOOP;
END;
--7 -- OSCAR KAZANMIS OLAN FILMLERIN BASROLLERI
DECLARE 
    CURSOR OSCAR IS SELECT DISTINCT A.ADI,A.SOYADI FROM ODUL O, FILMODULLERI FO , FILM F, AKTOR A, FILMAKTORLERI FA
        WHERE A.ID = FA.AKTORID AND FA.FILMID = F.ID AND O.ID = FO.ODULID AND FO.FILMID = F.ID AND FA.ROL = 'BASROL';
    TYPE ADTUR IS TABLE OF AKTOR.ADI%TYPE INDEX BY BINARY_INTEGER;
    TYPE SOYADTUR IS TABLE OF AKTOR.SOYADI%TYPE INDEX BY BINARY_INTEGER; 
    AD ADTUR;
    SOYAD SOYADTUR;
    SAYAC BINARY_INTEGER := 1;
BEGIN
        DBMS_OUTPUT.PUT_LINE('OSCAR ALAN FILMLERIN BASROLLERI');
    FOR SAY IN OSCAR LOOP
        AD(SAYAC) := SAY.ADI;
        SOYAD(SAYAC) := SAY.SOYADI;
        DBMS_OUTPUT.PUT_LINE(AD(SAYAC) || ' ' || SOYAD(SAYAC));
        SAYAC := SAYAC + 1;
    END LOOP;
END;

--8 -- 1 NUMARALI UYENIN ALDIĞI FILMLER VE FILMLERIN YAPILDIĞI ULKELER    
DECLARE 
    CURSOR FILMLER IS SELECT F.ADI, UL.ADI FROM UYE U, ODUNCFILMLER O, FILM F , ULKE UL
        WHERE U.ID = O.UYEID AND O.FILMID = F.ID AND F.ULKE = UL.ID  AND U.ID = '1';
    FILMADI FILM.ADI%TYPE;
    ULKEADI ULKE.ADI%TYPE;
BEGIN 
    IF NOT FILMLER%ISOPEN THEN
        OPEN FILMLER;
    END IF;
    LOOP
        FETCH FILMLER INTO FILMADI,ULKEADI;
        EXIT WHEN FILMLER%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE( RPAD(FILMADI,25) || ' ' || RPAD(ULKEADI,10));
    END LOOP;
END;
--9 -- FILM PUAN SIRALAMASI GENEL
DECLARE
    CURSOR PUAN IS SELECT F.ADI , AVG(FE.PUAN) PUAN
            FROM FILM F, FILMELESTIRILERI FE
            WHERE F.ID = FE.FILMID 
            GROUP BY F.ADI 
            ORDER BY PUAN DESC;
    FILMADI FILM.ADI%TYPE;
    FILMPUANI NUMBER(4,2);
BEGIN
    IF NOT PUAN%ISOPEN THEN 
        OPEN PUAN;
    END IF;
    FETCH PUAN INTO FILMADI,FILMPUANI;
    WHILE PUAN%FOUND LOOP
        DBMS_OUTPUT.PUT_LINE(RPAD(FILMADI,25) || ' ' || RPAD(FILMPUANI,5));
        FETCH PUAN INTO FILMADI,FILMPUANI;
    END LOOP;
END;

-- 10 --EN YUKSEK FILME SAHIP OLAN ULKE
DECLARE
    CURSOR ULKELER IS SELECT UL.ADI, COUNT(F.ADI)SAYI
        FROM FILM F, ULKE UL 
        WHERE F.ULKE = UL.ID 
        GROUP BY UL.ADI 
        ORDER BY SAYI DESC;
    TYPE ULKEREC IS RECORD (ADI ULKE.ADI%TYPE, SAYI INTEGER);
    TYPE ULKETUR IS TABLE OF ULKEREC INDEX BY BINARY_INTEGER;
    ULKESTR ULKETUR;
    SAY BINARY_INTEGER := 1;
BEGIN
    FOR TANE IN ULKELER LOOP
        ULKESTR(SAY).ADI := TANE.ADI;
        ULKESTR(SAY).SAYI := TANE.SAYI;
        DBMS_OUTPUT.PUT_LINE(RPAD(ULKESTR(SAY).ADI,20) || RPAD(ULKESTR(SAY).SAYI,10));
		SAY := SAY + 1;
    END LOOP;
END;

-- 11 --YUZUKLERIN EFENDISI FILMI IÇIN ELESTIRMENLERIN VERMIŞ OLDUĞU PUANLARI GETIR
DECLARE
    VERIHATASI EXCEPTION;
    PRAGMA EXCEPTION_INIT (VERIHATASI,-1422);
    CURSOR FILMLER IS SELECT E.ADI, E.SOYADI, F.ADI,FE.PUAN FROM FILM F, ELESTIRMEN E, FILMELESTIRILERI FE 
        WHERE F.ID = FE.FILMID AND FE.ELESTIRMENID = E.ID AND F.ADI = UPPER('YUZUKLERIN EFENDISI')  ;
    ADI FILM.ADI%TYPE;
    EADI ELESTIRMEN.ADI%TYPE;
    ESADI ELESTIRMEN.SOYADI%TYPE;
    PUAN NUMBER(4,2);
BEGIN 
    IF NOT FILMLER%ISOPEN THEN 
        OPEN FILMLER;
    END IF;
    LOOP
        FETCH FILMLER INTO EADI,ESADI,ADI,PUAN;
        EXIT WHEN FILMLER%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE( RPAD(EADI,10) || ' ' || RPAD(ESADI,10) || ' ' || RPAD(ADI,25) || ' ' || RPAD(PUAN,10));
    END LOOP;
    CLOSE FILMLER;
END;

--12 -- HEM OLUMLU DUNYADA HEMDE MEMENTO DA OYNAYAN OYUNCULAR KIMDIR 
DECLARE
    CURSOR MEMENTO IS SELECT A.ADI, A.SOYADI  FROM FILM F , FILMAKTORLERI FA, AKTOR A WHERE F.ID = FA.FILMID AND FA.AKTORID = A.ID AND  F.ADI = UPPER('MEMENTO');
    CURSOR OLDU IS SELECT A.ADI, A.SOYADI  FROM FILM F , FILMAKTORLERI FA, AKTOR A WHERE F.ID = FA.FILMID AND FA.AKTORID = A.ID AND  F.ADI = UPPER('OLUMLU DUNYA');
    TYPE ADTUR IS TABLE OF AKTOR.ADI%TYPE INDEX BY BINARY_INTEGER;
    TYPE SOYADTUR IS TABLE OF AKTOR.SOYADI%TYPE INDEX BY BINARY_INTEGER;
    AD1 ADTUR;
    SOYAD1 SOYADTUR;
    AD2 ADTUR;
    SOYAD2 SOYADTUR;
    SAYAC1 BINARY_INTEGER := 0;
    SAYAC2 BINARY_INTEGER := 0;
BEGIN 
    FOR SAY1 IN MEMENTO LOOP 
        SAYAC1 := SAYAC1 + 1; 
        AD1(SAYAC1)    := SAY1.ADI;
        SOYAD1(SAYAC1) := SAY1.SOYADI;
    END LOOP;
    FOR SAY2 IN OLDU LOOP 
        SAYAC2 := SAYAC2 + 1; 
        AD2(SAYAC2)    := SAY2.ADI;
        SOYAD2(SAYAC2) := SAY2.SOYADI;
    END LOOP;
    FOR TANE IN 1..SAYAC1 LOOP
        FOR TANE2 IN 1..SAYAC2 LOOP
            IF AD1(TANE) = AD2(TANE2) THEN 
            DBMS_OUTPUT.PUT_LINE(RPAD(AD1(TANE),15) || RPAD(SOYAD2(TANE),15));
            END IF;
        END LOOP;
    END LOOP;
END;

-- 13 -- CHRISTOPHER NOLANIN FILMLERINI UZUNLUGA GORE SIRALA
DECLARE
    CURSOR FILMLER IS SELECT F.ADI, F.SURE FROM FILMYONETMENLERI FY, FILM F 
        WHERE FY.FILMID = F.ID AND FY.YONETMENID = (SELECT Y.ID FROM YONETMEN Y WHERE Y.ADI = 'CHRISTOPHER' AND Y.SOYADI = 'NOLAN')
        ORDER BY F.SURE DESC;
    TYPE ADTUR   IS VARRAY(25) OF FILM.ADI%TYPE;
    TYPE SURETUR IS VARRAY(20)  OF FILM.SURE%TYPE;
    AD ADTUR := ADTUR();
    SURE SURETUR := SURETUR();
    SAY INTEGER := 0;
BEGIN
    FOR TANE IN FILMLER LOOP 
        SAY := SAY + 1;
        AD.EXTEND;
        AD(SAY) := TANE.ADI;
        SURE.EXTEND;
        SURE(SAY) := TANE.SURE;
    END LOOP;
    FOR TANE IN 1..SAY LOOP
        DBMS_OUTPUT.PUT_LINE(RPAD(AD(TANE),20) || RPAD(SURE(TANE),10));
    END LOOP;
END;
-- 14 --KORKU FİLMİNDE OYANYAN OYUNCULAR
DECLARE 
    CURSOR FILMLER IS SELECT DISTINCT F.ADI FADI, A.ADI AADI , A.SOYADI, T.ADI TADI FROM FILM F , FILMTURLERI FT, TURLER T, FILMAKTORLERI FA, AKTOR A
        WHERE T.ID = FT.TURID AND FT.FILMID = F.ID AND F.ID = FA.FILMID AND FA.AKTORID = A.ID AND T.ADI = 'KORKU' ORDER BY F.ADI DESC;
    TYPE FADTUR IS TABLE OF FILM.ADI%TYPE INDEX BY BINARY_INTEGER;
    TYPE AADTUR IS TABLE OF AKTOR.ADI%TYPE INDEX BY BINARY_INTEGER;
    TYPE ASATUR IS TABLE OF AKTOR.SOYADI%TYPE INDEX BY BINARY_INTEGER;
    TYPE TURTUR IS TABLE OF TURLER.ADI%TYPE INDEX BY BINARY_INTEGER;
    FADI FADTUR;
    AADI AADTUR;
    ASADI ASATUR;
    TUR TURTUR;
    SAYAC BINARY_INTEGER := 0;
BEGIN
    FOR SAY IN FILMLER LOOP 
        SAYAC := SAYAC + 1; 
        FADI(SAYAC)    := SAY.FADI;
        AADI(SAYAC)    := SAY.AADI;
        ASADI(SAYAC) := SAY.SOYADI;
        TUR(SAYAC) := SAY.TADI;
    END LOOP;
    FOR TANE IN 1..SAYAC LOOP
        DBMS_OUTPUT.PUT_LINE(RPAD(FADI(TANE),30) || RPAD(AADI(TANE),30) ||RPAD(ASADI(TANE),30) || RPAD(TUR(TANE),30));
    END LOOP;
END;
-- 15 -- ALMAN OLUP BASROL OYNAMIS OYUNCULARIN OYNADIGI FILMLER
DECLARE
    TYPE ULKEADI IS TABLE OF ULKE.ADI%TYPE INDEX BY BINARY_INTEGER;
    TYPE AKTORADI IS TABLE OF AKTOR.ADI%TYPE INDEX BY BINARY_INTEGER;
    TYPE AKTORSOYADI IS TABLE OF AKTOR.SOYADI%TYPE INDEX BY BINARY_INTEGER;
    TYPE AKTORROLU IS TABLE OF FILMAKTORLERI.ROL%TYPE INDEX BY BINARY_INTEGER;
    TYPE FILMADI IS TABLE OF FILM.ADI%TYPE INDEX BY BINARY_INTEGER;
    SAY BINARY_INTEGER := 1;
    AD AKTORADI;
    soyad AKTORSOYADI;
    ULKEA ULKEADI;
    FILMA FILMADI;
    ROL AKTORROLU;
    CURSOR FILMLER IS select F.ADI FILMADI , A.ADI AKTORADI ,A.SOYADI AKTORSOYADI ,FA.ROL ,U.ADI ULKEADI 
    from FILMAKTORLERI fa , aktor a, ULKE U ,FILM F 
    where a.id = fa.AKTORID AND U.ID = A.ULKE AND FA.FILMID = F.ID AND FA.ROL = UPPER('basrol') and u.adi = upper('Almanya');
BEGIN
    FOR I IN FILMLER LOOP
        AD(SAY) := I.AKTORADI;
        SOYAD(SAY) := I.AKTORSOYADI;
        ULKEA(SAY) := I.ULKEADI;
        FILMA(SAY) := I.FILMADI;
        ROL(SAY) := I.ROL;
        DBMS_OUTPUT.PUT_LINE(RPAD(AD(SAY),15) || RPAD(SOYAD(SAY),15) || RPAD(ULKEA(SAY),15) || RPAD(FILMA(SAY),15) || RPAD(ROL(SAY),15));
        SAY := SAY + 1;
    END LOOP;
END;

--16 -- EN SON ALINMIŞ FILMIN ORTALAMA PUANI
DECLARE
   CURSOR THEFILM IS SELECT U.ADI UYEAD, U.SOYADI UYESOYAD ,U.SEHIR UYESEHIR,F.ADI FILMADI ,F.SURE ,F.YAPIM_YILI , F.ID
        FROM ODUNCFILMLER OD , UYE U , FILM F
        WHERE OD.UYEID = U.ID AND F.ID = OD.FILMID 
        ORDER BY OD.ALINMATARIHI DESC;
 CURSOR PUAN(FILMID FILM.ID%TYPE) IS SELECT AVG(PUAN) PUAN FROM FILMELESTIRILERI FE WHERE FE.FILMID = FILMID;
   REC THEFILM%ROWTYPE;
   REC2 PUAN%ROWTYPE;
BEGIN
    OPEN THEFILM;
    FETCH THEFILM INTO REC;
    OPEN PUAN(REC.ID);
    FETCH PUAN INTO REC2;
    DBMS_OUTPUT.PUT_LINE(RPAD(REC.UYEAD ,15 ) || RPAD(REC.UYESOYAD,15) || RPAD(REC.UYESEHIR,15)  || RPAD(REC.FILMADI,15) || RPAD(REC.SURE,15) || RPAD(REC.ID,15) || RPAD(REC.YAPIM_YILI,15) || RPAD(REC2.PUAN,15))  ;
    CLOSE THEFILM;
    CLOSE PUAN;
END;
--17 -- EN IYI ALMANCA FILMIN BILGILERINI DONDUREN PROSEDUR
CREATE OR REPLACE PROCEDURE FILMBILGISI
    (FILMID  IN  FILM.ID%TYPE,
     ADI     OUT FILM.ADI%TYPE,
     YIL     OUT FILM.YAPIM_YILI%TYPE,
     SURE    OUT FILM.SURE%TYPE,
     DIL     OUT FILM.DIL%TYPE,
     ULKEADI OUT ULKE.ADI%TYPE)
    IS BEGIN
    SELECT F.ADI, F.YAPIM_YILI,F.SURE,F.DIL,U.ADI
    INTO ADI,YIL,SURE,DIL,ULKEADI
    FROM FILM F, ULKE U
    WHERE F.ULKE = U.ID AND F.ID = FILMID;
EXCEPTION 
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('BOYLE BIR FILM YOK');
END FILMBILGISI;

DECLARE 
    CURSOR ALMANCA IS 
            SELECT F.ADI, AVG(FE.PUAN) PUAN , F.ID
            FROM FILM F, FILMELESTIRILERI FE
            WHERE F.ID = FE.FILMID AND F.DIL = UPPER('ALMANCA')
            GROUP BY F.ADI,F.ID
            ORDER BY PUAN;
    REC ALMANCA%ROWTYPE;
    ADI     FILM.ADI%TYPE;
    YIL     FILM.YAPIM_YILI%TYPE;
    SURE    FILM.SURE%TYPE;
    DIL     FILM.DIL%TYPE;
    ULKEADI ULKE.ADI%TYPE;
BEGIN
    OPEN ALMANCA;
    FETCH ALMANCA INTO REC;
    CLOSE ALMANCA;
    FILMBILGISI(REC.ID,ADI,YIL,SURE,DIL,ULKEADI);
    DBMS_OUTPUT.PUT_LINE(RPAD(ADI,20) || RPAD(YIL,10) || RPAD(SURE,10) || RPAD(DIL,15) || RPAD(ULKEADI,15));
END;

 
-- 18 – GİRİLEN ÜLKEDEN HERHANGİ BİR FİLM ÖDÜL ALMIŞ MI?
CREATE OR REPLACE FUNCTION ODULBUL(ULKEID IN ULKE.ID%TYPE)
    RETURN BOOLEAN IS 
    FILMADI FILM.ADI%TYPE;
    ODULSAYISI BINARY_INTEGER;
BEGIN 
    SELECT U.ADI, COUNT(F.ID)
    INTO FILMADI, ODULSAYISI
    FROM ODUL O , FILMODULLERI FO , FILM F,ULKE U
    WHERE O.ID = FO.ODULID AND FO.FILMID = F.ID AND U.ID = F.ULKE AND U.ID = ULKEID
    GROUP BY U.ADI;
    IF ODULSAYISI IS NOT NULL THEN 
        RETURN TRUE;
    END IF;
EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
    RETURN FALSE;
END;

DECLARE 
    ULKEGIR ULKE.ID%TYPE := &ID;
    BOOL BOOLEAN;
BEGIN 
    BOOL := ODULBUL(ULKEGIR);
    IF BOOL = TRUE THEN
        DBMS_OUTPUT.PUT_LINE('gGIRDIGIN ULKE ODUL ALMISTIR');
    ELSE 
        DBMS_OUTPUT.PUT_LINE('GIRDIGIN ULKE ODUL ALAMAMISTIR');
    END IF;
END;
old:DECLARE 


-- 19 – 60 DK OLAN FİLMLERİ 65 DK OLARAK KAYDET INSERT
CREATE OR REPLACE TRIGGER SURE BEFORE INSERT ON FILM
    FOR EACH ROW
        BEGIN 
            IF :NEW.SURE < '61' THEN 
                :NEW.SURE := '65';
            END IF;
END;

INSERT INTO FILM VALUES (16,'TEST',2035,60,'CINCE',5);

SELECT * FROM FILM;


-- 20 – GÜNCELLEME İŞLEMİ TRIGGER İLE SURE AZALTMASI ENGELLEMEK
CREATE OR REPLACE TRIGGER GUNCELLE BEFORE UPDATE ON FILM
 FOR EACH ROW
  BEGIN
  IF NVL(:NEW.SURE,0) < :OLD.SURE THEN
  raise_application_error(-20999,'IZIN YOK!');
  END IF;
  END;
SELECT * FROM FILM WHERE ID = 14 ;
UPDATE FILM SET SURE = 100 WHERE ID = 14;
UPDATE FILM SET SURE = 160 WHERE ID = 14;
SELECT * FROM FILM WHERE ID = 14 ;

